@page "/login"
<PageTitle>Login</PageTitle>
@using FrontStore.Model;
@using FrontStore.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Newtonsoft.Json
@inject ILogger<LoginRequest> Logger
@inject HttpClient Http
@inject NavigationManager NavManager

<CascadingAuthenticationState>
    <AuthorizeView Context="authContext">
        <Authorized>
            @{
                NavManager.NavigateTo("/");
            }
        </Authorized>

        <NotAuthorized>

            <div class="container">
                <div class="row justify-content-center">

                    <h1 class="text-center">
                        Login
                    </h1>

                    <div class="col-md-4 col-lg-4 col-sm-12">

                        <EditForm Model="@loginRequest" OnSubmit="SignIn">

                            <DataAnnotationsValidator />


                            <div class="form-group">
                                <label for="email">Email</label>
                                <InputText id="email" type="email" class="form-control" @bind-Value="loginRequest.Email" />
                            </div>
                            <div class="form-group">
                                <label for="password">Password</label>
                                <InputText type="password" class="form-control" @bind-Value="loginRequest.Password" />
                            </div>
                            <button type="submit" class="btn btn-primary mt-2">Login</button>
                        </EditForm>
                        <NavLink href="register">Don't have an account? Register</NavLink>
                    </div>
                </div>
            </div>

        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>


@code {
    [SupplyParameterFromForm]
    private LoginRequest loginRequest { get; set; } = new LoginRequest();

    [Inject]
    public IAuthService AuthService { get; set; }

    private async Task SignIn()
    {
        try
        {
            Logger.LogInformation("Login reques {0}", JsonConvert.SerializeObject(loginRequest));
            await AuthService.SignIn(loginRequest);
        }
        catch (Exception ex)
        {
            Logger.LogError("Error while login {0}", ex.Message);
        }


    }
}
